---
kind: pipeline
name: prepare
trigger:
  branch:
  - master
  event:
  - push
clone:
  disable: true

steps:
- name: register-qemu
  image: multiarch/qemu-user-static:register
  command: [ "--reset" ]
  privileged: true

---
kind: pipeline
name: user-debian-8
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-debian arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - jessie-arm32v7
      - 8-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/debian:8
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - jessie-arm32v5
      - 8-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/debian:8
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - jessie-amd64
      - 8-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/debian:8
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-jessie
  image: plugins/manifest:1
  environment:
    DRONE_TAG: jessie
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-8
  image: plugins/manifest:1
  environment:
    DRONE_TAG: 8
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - prepare

---
kind: pipeline
name: user-debian-8-slim
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-debian arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - jessie-slim-arm32v7
      - 8-slim-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/debian:8-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - jessie-slim-arm32v5
      - 8-slim-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/debian:8-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - jessie-slim-amd64
      - 8-slim-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/debian:8-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-jessie-slim
  image: plugins/manifest:1
  environment:
    DRONE_TAG: jessie-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-8-slim
  image: plugins/manifest:1
  environment:
    DRONE_TAG: 8-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - prepare

---
kind: pipeline
name: user-debian-9-slim
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-debian arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-slim-arm64v8
      - 9-slim-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/debian:9-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-slim-arm32v7
      - 9-slim-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/debian:9-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-slim-arm32v5
      - 9-slim-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/debian:9-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-slim-amd64
      - 9-slim-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/debian:9-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-stretch-slim
  image: plugins/manifest:1
  environment:
    DRONE_TAG: stretch-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-9-slim
  image: plugins/manifest:1
  environment:
    DRONE_TAG: 9-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - prepare

---
kind: pipeline
name: user-debian-9
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-debian arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-arm64v8
      - 9-arm64v8
      - latest-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/debian:9
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-arm32v7
      - 9-arm32v7
      - latest-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/debian:9
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-arm32v5
      - 9-arm32v5
      - latest-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/debian:9
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: phasecorex/user-debian
    create_repository: true
    use_cache: true
    tags: 
      - stretch-amd64
      - 9-amd64
      - latest-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/debian:9
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-stretch
  image: plugins/manifest:1
  environment:
    DRONE_TAG: stretch
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-9
  image: plugins/manifest:1
  environment:
    DRONE_TAG: 9
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-latest
  image: plugins/manifest:1
  environment:
    DRONE_TAG: latest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - prepare

